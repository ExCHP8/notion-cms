import{Client as t,isFullPage as e}from"@notionhq/client";import{NotionBlocksHtmlParser as s}from"@notion-stuff/blocks-html-parser";import i from"lodash";import a from"fs";import{dirname as r}from"path";const n=/<figure notion-figure>[\s\S]+<img[^>]*src=['|"](https?:\/\/[^'|"]+)(?:['|"])/;Object.defineProperty(String.prototype,"slug",{get:function(){return i.kebabCase(this)}}),Object.defineProperty(String.prototype,"route",{get:function(t="/"){return this.padStart(this.length+1,t)}});class o{cms;cmsId;notionClient;parser;pendingEntries;pageRetrievalCache;debug;constructor({databaseId:e,notionAPIKey:i,debug:a}={databaseId:"",notionAPIKey:"",debug:!1}){this.cms={metadata:{},routes:[],tags:[],tagGroups:{},siteData:{}},this.cmsId=e,this.notionClient=new t({auth:i}),this.parser=s.getInstance(),this.pendingEntries=new Set,this.pageRetrievalCache={},this.debug=a}get data(){if(!i.isEmpty(this.cms.siteData))return this.cms.siteData}get routes(){if(!i.isEmpty(this.cms.siteData))return this.toplevelDirectories?(this.cms.routes=[],this.toplevelDirectories.forEach((t=>{this.cms.routes.push(this._genRoutes(t))})),this.cms.routes=this.cms.routes.flat()):void 0}get toplevelDirectories(){if(!i.isEmpty(this.cms.siteData))return Object.entries(this.cms.siteData)}_genRoutes(t){const e=[],s=t[0],a=i(t[1]).pickBy(((t,e)=>i.startsWith(e,"/"))).entries().value();return a.length?(a.forEach((t=>{const i=this._genRoutes(t);i.length?i.forEach((t=>e.push(s+t))):e.push(s+i)})),e.push(s),e):[s]}_clearPageRetrievalCache(){this.pageRetrievalCache={}}_isTopLevelDir(t){const e=t?.properties["parent-page"];return i.isEmpty(e.relation)}_getBlockName(t){const e=t?.properties.name;return e.title[0]?.plain_text}_extractTags(t){const e=t?.properties?.Tags;return e.multi_select.map((t=>t.name))}_assignTagGroup(t,e){this.cms.tagGroups[t]||(this.cms.tagGroups[t]=[]),this.cms.tagGroups[t].push(e)}async _getAuthorData(t){const e=t.properties?.Author,s=e.people;let i;return s?.length?(i=await Promise.all(s.map((async t=>await this.notionClient.users.retrieve({user_id:t.id})))).then((t=>{if(t?.length)return t.map((t=>t.name))})),i||[]):[]}_findByKey(t,e){let s;return Object.keys(t).some((i=>i===e?(s=t[i],!0):t[i]&&"object"==typeof t[i]?(s=this._findByKey(t[i],e),void 0!==s):void 0)),s}async _getPageContent(t){let s;const a=[];s="page"===t?.object?t:await this._retrievePage(t.id);const r=await this.notionClient.blocks.children.list({block_id:t.id,page_size:50}),o=this._getBlockName(s).slug,h=this.parser.parse(r.results);if(e(s)){const t=s?.cover;let r;if(r=t&&"external"in t?t?.external?.url:t?.file?t?.file.url:h.match(n)?.[1],e(s)){this._extractTags(s).forEach((t=>{a.push(t),i.includes(this.cms.tags,t)||this.cms.tags.push(t),this._assignTagGroup(t,o.route)}))}return{name:o,authors:await this._getAuthorData(s),tags:a,coverImage:r,content:h}}return{name:"",authors:[],tags:[],coverImage:new URL(""),content:""}}_findInPending(t){let e;return this.pendingEntries.forEach((s=>{t===s.entry&&(e=s)})),e}async _retrievePage(t){let e=this.pageRetrievalCache[t];return e||(e=await this.notionClient.pages.retrieve({page_id:t}),this.pageRetrievalCache[t]=e),e}async _addPage(t){let s,a,r;const n=t.properties["parent-page"].relation[0];if(n&&(s=await this._retrievePage(n.id)),s&&e(s)?(a=this._getBlockName(s).slug.route,r=this._findByKey(this.cms.siteData,a)):r=this.cms.siteData,r){const e=await this._getPageContent(t);r[e.name.route]||(r[e.name.route]=e);const s=this._findInPending(t);s&&this.pendingEntries.delete(s)}else if(a){let e=!0;for(const s of this.pendingEntries)if(i.isEqual(t,s.entry)){e=!1;break}e&&this.pendingEntries.add({parentName:a,entry:t})}}async fetch(){this._clearPageRetrievalCache();const t=await this.notionClient.databases.query({database_id:this.cmsId});for await(const e of t.results)await this._addPage(e);for(;this.pendingEntries.size;)for await(const t of this.pendingEntries)await this._addPage(t.entry);var e,s;return this.routes,this.debug&&(e="debug/site-data.json",s=JSON.stringify(this.cms),a.mkdirSync(r(e),{recursive:!0}),a.writeFileSync(e,s)),this.cms}getTaggedCollection(t){i.isArray(t)||(t=[t]);const e=[];for(const s of t)e.push(...this.cms.tagGroups[s]);return i(e).map((t=>this._findByKey(this.cms.siteData,t))).uniq().value()}}export{o as default};
//# sourceMappingURL=index.js.map
