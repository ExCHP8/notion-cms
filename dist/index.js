import{Client as t,isFullPage as e}from"@notionhq/client";import{NotionBlocksHtmlParser as s}from"@notion-stuff/blocks-html-parser";import i from"lodash";import a from"fs";import{dirname as r}from"path";const n=/<figure notion-figure>[\s\S]+<img[^>]*src=['|"](https?:\/\/[^'|"]+)(?:['|"])/;Object.defineProperty(String.prototype,"slug",{get:function(){return i.kebabCase(this)}}),Object.defineProperty(String.prototype,"route",{get:function(t="/"){return this.padStart(this.length+1,t)}});class o{cms;cmsId;notionClient;parser;pendingEntries;pageRetrievalCache;debug;constructor({databaseId:e,notionAPIKey:i,debug:a,rootUrl:r}={databaseId:"",notionAPIKey:"",debug:!1,rootUrl:""}){this.cms={metadata:{databaseId:e,rootUrl:r?new URL(r):""},routes:[],tags:[],tagGroups:{},transient:{},siteData:{}},this.cmsId=e,this.notionClient=new t({auth:i}),this.parser=s.getInstance(),this.pendingEntries=new Set,this.pageRetrievalCache={},this.debug=a}get data(){if(!i.isEmpty(this.cms.siteData))return this.cms.siteData}get routes(){if(!i.isEmpty(this.cms.siteData))return this.toplevelDirectories?(this.cms.routes=[],this.toplevelDirectories.forEach((t=>{this.cms.routes.push(this._genRoutes(t))})),this.cms.routes=this.cms.routes.flat()):void 0}get toplevelDirectories(){if(!i.isEmpty(this.cms.siteData))return Object.entries(this.cms.siteData)}_genRoutes(t){const e=[],s=t[0],a=i(t[1]).pickBy(((t,e)=>i.startsWith(e,"/"))).entries().value();return a.length?(a.forEach((t=>{const i=this._genRoutes(t);i.length?i.forEach((t=>e.push(s+t))):e.push(s+i)})),e.push(s),e):[s]}_clearPageRetrievalCache(){this.pageRetrievalCache={}}_isTopLevelDir(t){const e=t?.properties["parent-page"];return i.isEmpty(e.relation)}_getBlockName(t){const e=t?.properties.name;return e.title[0]?.plain_text}_extractTags(t){const e=t?.properties?.Tags;return e.multi_select.map((t=>t.name))}_assignTagGroup(t,e,s){s.tagGroups[t]||(s.tagGroups[t]=[]),s.tagGroups[t].push(e)}_findByKey(t,e){let s;return Object.keys(t).some((i=>i===e?(s=t[i],!0):t[i]&&"object"==typeof t[i]?(s=this._findByKey(t[i],e),void 0!==s):void 0)),s}_getCoverImage(t,e){const s=t?.cover;let i;return i=s&&"external"in s?s?.external?.url:s?.file?s?.file.url:e.match(n)?.[1],i}async _pullPageContent(t,s){let a;const r=[];a=await this._retrievePage(t);const n=await this.notionClient.blocks.children.list({block_id:t,page_size:50}),o=this._getBlockName(a).slug,c=this.parser.parse(n.results);if(e(a)){const t=this._getCoverImage(a,c);return this._extractTags(a).forEach((t=>{r.push(t),i.includes(s.tags,t)||s.tags.push(t),this._assignTagGroup(t,o.route,s)})),{name:o,tags:r,coverImage:t,content:c}}return{name:"",tags:[],coverImage:new URL(""),content:""}}_findInPending(t){let e;return this.pendingEntries.forEach((s=>{t===s.entry&&(e=s)})),e}async _retrievePage(t){let e=this.pageRetrievalCache[t];return e||(e=await this.notionClient.pages.retrieve({page_id:t}),this.pageRetrievalCache[t]=e),e}async _addPage(t,s,a){let r,n,o,c,h;const g=t.parentPage;if(g&&(o=await this._retrievePage(g)),r=await this._retrievePage(s),r&&e(r)){n=this._getBlockName(r).slug.route;const s=r.properties?.Author,i=s.people;t.authorIds=i.map((t=>t.id)),t.name=n,o&&e(o)?(c=this._getBlockName(o).slug.route,h=this._findByKey(a,c)):h=a}if(h&&n){h[n]||(h[n]={});const e=this._findInPending(t);e&&this.pendingEntries.delete(e)}else{let e=!0;for(const s of this.pendingEntries)if(i.isEqual(t,s.entry)){e=!1;break}e&&this.pendingEntries.add({id:s,entry:t})}}async _getAuthorData(t){let e;return t?.length?(e=await Promise.all(t.map((async t=>await this.notionClient.users.retrieve({user_id:t})))).then((t=>{if(t?.length)return t.map((t=>t.name))})),e||[]):[]}async _getPageContent(t){let e=i.cloneDeep(t);if(!e.transient)return e;for await(const[t,s]of Object.entries(e.transient)){let i=this._findByKey(e.siteData,s.name);const a=await this._pullPageContent(t,e);i.name=a.name,i.tags=a.tags,i.coverImage=a.coverImage,i.content=a.content}return e}async _getAuthors(t){let e=i.cloneDeep(t);if(!e.transient)return e;for await(const[t,s]of Object.entries(e.transient)){this._findByKey(e.siteData,s.name).authors=await this._getAuthorData(s.authorIds)}return e}async _getPages(t){let e=i.cloneDeep(t);if(!e.transient)return e;for await(const[t,s]of Object.entries(e.transient))await this._addPage(s,t,e.siteData);for(;this.pendingEntries.size;)for await(const t of this.pendingEntries)await this._addPage(t.entry,t.id,e.siteData);return e}async _getDb(t){let e=i.cloneDeep(t);if(!e.transient)return e;const s=await this.notionClient.databases.query({database_id:t.metadata.databaseId});for await(const t of s.results){let s=e.transient[t.id]={name:"",parentPage:"",authorIds:void 0};const i=t.properties["parent-page"];i&&(s.parentPage=i.relation[0]?.id)}return e}async fetch(){var t,e;return this._clearPageRetrievalCache(),this.cms=await this._getPageContent(await this._getAuthors(await this._getPages(await this._getDb(this.cms)))),delete this.cms.transient,this.routes,this.debug&&(t="debug/site-data.json",e=JSON.stringify(this.cms),a.mkdirSync(r(t),{recursive:!0}),a.writeFileSync(t,e)),this.cms}getTaggedCollection(t){i.isArray(t)||(t=[t]);const e=[];for(const s of t)e.push(...this.cms.tagGroups[s]);return i(e).map((t=>this._findByKey(this.cms.siteData,t))).uniq().value()}}export{o as default};
//# sourceMappingURL=index.js.map
