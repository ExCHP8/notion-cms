import{Client as t,isFullPage as e}from"@notionhq/client";import{NotionBlocksHtmlParser as i}from"@notion-stuff/blocks-html-parser";import s from"lodash";import a from"fs";const n=/<figure notion-figure>[\s\S]+<img[^>]*src=['|"](https?:\/\/[^'|"]+)(?:['|"])/;Object.defineProperty(String.prototype,"slug",{get:function(){return s.kebabCase(this)}}),Object.defineProperty(String.prototype,"route",{get:function(t="/"){return this.padStart(this.length+1,t)}});class r{cms;cmsId;notionClient;parser;pendingEntries;pageRetrievalCache;constructor({databaseId:e,notionAPIKey:s}={databaseId:"",notionAPIKey:""}){this.cms={metadata:{},routes:[],tags:[],tagGroups:{},siteData:{}},this.cmsId=e,this.notionClient=new t({auth:s}),this.parser=i.getInstance(),this.pendingEntries=new Set,this.pageRetrievalCache={}}get data(){if(!s.isEmpty(this.cms.siteData))return this.cms.siteData}get routes(){if(!s.isEmpty(this.cms.siteData))return this.toplevelDirectories?(this.cms.routes=[],this.toplevelDirectories.forEach((t=>{this.cms.routes.push(this._genRoutes(t))})),this.cms.routes=this.cms.routes.flat()):void 0}get toplevelDirectories(){if(!s.isEmpty(this.cms.siteData))return Object.entries(this.cms.siteData)}_genRoutes(t){const e=[],i=t[0],a=s(t[1]).pickBy(((t,e)=>s.startsWith(e,"/"))).entries().value();return a.length?(a.forEach((t=>{const s=this._genRoutes(t);s.length?s.forEach((t=>e.push(i+t))):e.push(i+s)})),e.push(i),e):[i]}_clearPageRetrievalCache(){this.pageRetrievalCache={}}_isTopLevelDir(t){const e=t?.properties["parent-page"];return s.isEmpty(e.relation)}_getBlockName(t){const e=t?.properties.name;return e.title[0]?.plain_text}async _getAuthorData(t){const e=t.properties?.Author,i=e.people;let s;return i?.length?(s=await Promise.all(i.map((async t=>await this.notionClient.users.retrieve({user_id:t.id})))).then((t=>{if(t?.length)return t.map((t=>t.name))})),s||[]):[]}_findKey(t,e){let i;return Object.keys(t).some((s=>s===e?(i=t[s],!0):t[s]&&"object"==typeof t[s]?(i=this._findKey(t[s],e),void 0!==i):void 0)),i}async _getPageContent(t){let i;i="page"===t?.object?t:await this._retrievePage(t.id);const s=await this.notionClient.blocks.children.list({block_id:t.id,page_size:50}),a=this.parser.parse(s.results);if(e(i)){const t=i?.cover;let e;return e=t&&"external"in t?t?.external?.url:t?.file?t?.file.url:a.match(n)?.[1],{name:this._getBlockName(i).slug,authors:await this._getAuthorData(i),coverImage:e,content:a}}return{name:"",authors:[],coverImage:new URL(""),content:""}}_findInPending(t,e){let i;return this.pendingEntries.forEach((e=>{t===e.entry&&(i=e)})),i}async _retrievePage(t){let e=this.pageRetrievalCache[t];return e||(e=await this.notionClient.pages.retrieve({page_id:t}),this.pageRetrievalCache[t]=e),e}async _addSubPage(t){const i=t.properties["parent-page"].relation[0];let a=await this._retrievePage(i.id);if(e(a)){const e=this._getBlockName(a).slug.route,i=this._findKey(this.cms.siteData,e);if(i){const e=await this._getPageContent(t);i[e.name.route]||(i[e.name.route]=e);const s=this._findInPending(t,this.pendingEntries);s&&this.pendingEntries.delete(s)}else{let i=!0;for(const e of this.pendingEntries)if(s.isEqual(t,e.entry)){i=!1;break}i&&this.pendingEntries.add({parentName:e,entry:t})}}}async fetch(){this._clearPageRetrievalCache();const t=await this.notionClient.databases.query({database_id:this.cmsId});for await(const e of t.results)if(this._isTopLevelDir(e)){const t=await this._getPageContent(e),i=this.cms.siteData[this._getBlockName(e).slug.route]={...t},s=e.properties["sub-page"];if(s.relation.length)for await(const t of s.relation){const e=await this._getPageContent(t);i[e.name.route]=e}}else await this._addSubPage(e);for(;this.pendingEntries.size;){console.log("trigger while",this.pendingEntries.size);for await(const t of this.pendingEntries)console.log(t.parentName),await this._addSubPage(t.entry),a.writeFileSync("debug/site-data.json",JSON.stringify(this.cms.siteData))}return console.log("complete"),this.cms}}export{r as default};
//# sourceMappingURL=index.js.map
